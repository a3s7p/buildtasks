#!/bin/bash -e
# Copyright (c) 2011-2018 TurnKey GNU/Linux - https://www.turnkeylinux.org
# 
# This file is part of buildtasks.
# 
# Buildtasks is free software; you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by the
# Free Software Foundation; either version 3 of the License, or (at your
# option) any later version.


fatal() { echo "FATAL [$(basename $0)]: $@" 1>&2; exit 1; }
warning() { echo "WARNING [$(basename $0)]: $@"; }
info() { echo "INFO [$(basename $0)]: $@"; }

usage() {
cat<<EOF
Syntax: $0 file hashfile [-f|--force-gpg]
Verify GPG signature of hashfile and checksum of file (from hashfile)

Arguments::

    file            - Path to file to verify.
    hashfile        - Path to hash file.

Options::

    -f|--force-gpg  - Force GPG signiture check of hash file. Exit with
                      non-zero exit code if not signed by BT_GPGKEY.
                      Default is to only display a warning and continue.
    -h|--help       - Display this usage info and exit.

Environment::

    BT_GPGKEY       - [Required] GPG key id used to sign the hash file.
    BT_DEBUG        - Make output verbose.

EOF
exit 1
}

[[ -z "$BT_DEBUG" ]] || set -x

unset filepath hashpath
while [ "$1" != "" ]; do
    case $1 in
        --help|-h)
            usage;;
        --force-gpg|-f)
            force_gpg="yes";;
        *)
            if [[ -z "$filepath" ]]; then
                filepath=$1
            elif [[ -z "$hashpath" ]]; then
                hashpath=$1
            else
                usage
            fi;;
    esac
    shift
done

[[ -n "$filepath" ]] && [[ -n "$hashpath" ]] \
    || fatal "file and hashfile must be set. See '--help' for more info."

if ! gpg --list-keys $BT_GPGKEY 2>&1 >/dev/null; then
    info "Downloading GPG key: $BT_GPGKEY."
    if ! gpg --keyserver hkps://keyserver.ubuntu.com --recv-keys $BT_GPGKEY; then
        warning "importing from keyserver.ubuntu.com failed; trying alternate."
        wget -O /tmp/$BT_GPGKEY.asc https://www.turnkeylinux.org/$BT_GPGKEY.asc \
            || fatal "failed to download GPG key $BT_GPGKEY."
        gpg --import /tmp/$BT_GPGKEY.asc || fatal "alternate import failed."
        rm -f /tmp/$BT_GPGKEY.asc*
    fi
fi

info "Verifying GPG signature"
if ! output=$(gpg --verify $hashpath 2>&1); then
    if [[ "${output%%$'\n'*}" == "gpg: no valid OpenPGP data found." ]]; then
        msg="$hashpath is not signed by GPG"
        if [[ "$force_gpg" == "yes" ]]; then
            fatal "$msg - exiting because '--force-gpg' set."
        else
            warning "$msg - this is expected if building locally and/or the hash file is unsigned."
        fi
    else
        echo "$output"
        fatal "$hashpath GPG verification failed"
    fi
else
    echo "$output"
    info "GPG verification success."
fi

info "Verifying checksum."
sum1=$(sha512sum $filepath | cut -d " " -f 1)
sum2=$(grep -A 1 sha512sum $hashpath | head -n 2 | tail -n 1 | sed "s/^ *//; s/ .*//")
if [ ! "$sum1" == "$sum2" ]; then
    fatal "$filepath checksum verification failed."
fi

info "Checksum verification success."
